2. attribute merging

3. need some kind of print_edge_name
- for compare and for ikea ...
- needs logical space between str elems, and between legs and disambig
-- maybe insert real: < > `

6. extend match patterns
- currently ABC* matching only
- would be nice to have support for: *ABC   and ABC*XYZ
- can we find a syntax for REs that fits?

8. thread and event model
- parser per thread
- allow multiple ACTIVITY streams per CONTAINER (doact.c mutexes on outacts so as to treated atomically)
- inotify input events
  - on last non-stdin file on command line?
  - on file with special option ?
  - RESTful events on a socket  (push or pull) - a daemon mode
- cron-like:
	 output events e.g. "cron{^/graph[full=nowtime%3600 diff=nowtime%5]}"
-        input polling events, ....
         access verication...

- gdiff - for incremental outputs

9. queries
- results return to same bidir channel (RESTfull, socket, stdio, 
            -- what about queries in files??? 
                     -- maybe treat as if stdin -- return results to stdout
- return multiple results from applying a match
- edge queries
- meta queries (crazy aunts):  ?^G ?^S ?^N ?^C    (grammar, stats, net, cron)

10. persistence - ikea() idea seems ok
- deal with container updates (11.)

11. container updates
- requires:
  1. reading in previous contents
  2. verify that content matches contenthash (optional, maybe)
  3. updating,
  4. saving and computing new content hash
  5. updating contentx hash in containing object
  6. removing old contents iff no nonger referenced

12. Multi-threading, multi-process forking. Separate threads/processes for:
	- layout computation
	- container reloading for update
    - Need Locking strategy - (Mutex code? or maybe just thread switching at act boundaries??)
    -- Need lock for access to session
    -- Does it need lock to round-robin reads from multiple input streams?
    -- Does it need lock to read container content from ikea before continuong?

13. distributed graphs
  - net is a graph of authorized ssh access,  
  -    authorization may be symmetric: either end can intiate ssh
                        or asymmetric: only one end can initiate
  - access to authorized host needs to be verfied periodically,
      and indications made to the graph at both ends if access is broken 
      -- any normal RESTful connection can be used as verification
         polling only need in absence of normal traffic

  - access authorizations are at the user level, so avalable to 
    all g process run by that user

  - each g process may use all or any subset of the authorized access
    in its graph, (or graphs?)

       (a polling strategy is implied for assymetric accees)
  - actual connections are short RESTful connections over ssh.

    - no graph concept of read-only -  if the access is authorized
    (symmetric or asymetric) then both sides see the same distributed graph


14. g_pretty with opt for degrees of expansion and indentation
    -  see notes in g.c for a command syntax that includes this..
    -  need gprint(LIST, elem)   to support printing of lists with
       degrees of spacing friendliness:
        -- 0 maximally compact
                      - maybe don't provide this. if we want to diff graphs then
                      one act/line provides a much more useful output
                      - it is allowed for input
        -- 1 one act per line -- this should be the canonical form
        -- 2 split verb+subject, attributes, container-braces, onto their own lines.
        -- 3 split sensibily, as needed, to fit 80 char lines.
                      - fancy and complicated -- maybe drop
        -- 4 shell friendly (all backeting chars on their own lines)

14a. Command line option graph:  see notes in g.c
     -- use .g/default.g or /etc/g/deafult.g  for a default command line

16. Meta graphs:
      - grammar - Aunt Gudrun - devine knowledge
      - sync - Aunt Maude (the crazy one, believes anything, remembers nothing)
                ( or Aunt Dottie)
      - net - Aunt Nettie - graphs can register communities and aliases with nettie
      - cron - Aunt Cadence (with help from system cron?)
      - stats  - Aunt Sally (with tribute to my Sister ;-)
                - also include version info.

      - graph - no name (can register alias(es) with Nettie)
           -- nodes + attributes + edges?
           -- edges + attributes
           -- patterns

17. Persistent graph stats (IKEA?) -- e.g.
   -- cumulative multi-session stats
   -- liveness flags from Nettie.

18. Distinct stats nodes for stats from:  INBUF, LIST, TOKEN, THREAD, CONTAINER, SESSION, IKEA

20. Error recovery ( something less than FATAL on input errors )

    - needs independent error recovery per input stream.
      -- QRY  (ask Dottie) - gets ACT number of QRY, and id to match QRY itself
      --- report last good ACT by ACT number

            
21. need EDGE trees per NODE to support navigational queries

22. additional VSTRING quoting modes:
    <...>        <> must be balanced  XML/HTML/SVG
    {...}        {} must be balanced  JSON/YAML/DOT
    [length].... length bytes immediately following ']'  Binary

23. alternate DOM mode - GOM or DOM
    - GOM - merges dupes and does not preserver order, provides a
            cananical representation of a graph
    - DOM - retains dupes and preserves arrival order,
            but does not provide a canoncal representation of the doc
    In DOM mode, maybe we can use the same NODE, EDGE, ATTRIBUTE trees for
    indexing,  but the tree nodes should have a list of all the original objects 
    in arrival order. (Separated NODE and EDGE lists might be a problem.)

    See also #26

24. Container catalog:
   - In the ikea store, keep a catalog (dir) containing user-friendly
     named softlinks to content_hash containers.   Permit container reference
     in an attribute, e,g:
	_ikea_catalog=TTL7400    or _ikea_container=2jmj7l5rSw0yVb_vlWAYkK_YBwk
   - If using catalog entry, then prevent modification of contents. (or use git and controll pushes)
   - Consider keeping ikea_catalog contents in git for distribution

25. Foreign renderings:
   - can we use foreign svg renderings ? - e.g.
	https://commons.wikimedia.org/wiki/File:Ttl_inside_7400.svg
   - an in turn:
        http://www.tutorsglobe.com/homework-help/electrical-engneering/ttl-logic-gate-series-74148.aspx
   - would need to edit to make individual components clickable
   
26. configure options to enable/disable rewriters:  sameas, patterns, expand, reduce, dom/gom

27.  change STRING to IDENTIFIER   and document like for C:
A C identifier is a name used to identify a variable, function, or any other user-defined item. An identifier starts with a letter A to Z, a to z, or an underscore '_' followed by zero or more letters, underscores, and digits (0 to 9).

C does not allow punctuation characters such as @, $, and % within identifiers. C is a case-sensitive programming language. Thus, Manpower and manpower are two different identifiers in C. Here are some examples of acceptable identifiers âˆ’

mohd       zara    abc   move_name  a_123
myname50   _temp   j     a23b9      retVal

27a.   Then, maybe, rename VSTRING to STRING ?


28.  BUG    a[a=<b>]
The '<' is not allowed in VSTRING,  somehow it gets interpreted as an EDGE <b>
Should be able to insist that the first char after '=' is valid...   didn't work, maybe brain has stopped working

29. Rename "session"  to "process"  -- "session" is the persistent association
across multiple process invocations,  possibly in parrallel, and possibly
with periods of innactivity.

30. Reduce ABC set to a set sufficient for JSON/YAML/DOT compatibility.
Suggest a subset of printing ASCII.  Quoting allowed (what char set in quotes?)
DONE - aligned with C language

31. - consider support for additional escape chars in quote stings,  like C's   \t\v\n\f
    - consider support for arbtrary hex code excapes \x12 
         - maybe nothing to do,  just carry the escape sequence through literally
         - that would be ugly - \f would be treated differently than \" or \\
              or maybe we should store those literally too?
              '\' disables any special meaning of the folowing character, but the
               pair are passed through literally ???   would apply inside and outside of quotes

31.  option to provide small graphs on the command line.  e.g.
	g -e '(* b *)[x=y] (a x c)'
     single quote needed to prevent shell interaction

32. Optimizations
  - pattern.c - search less than the whole pattern tree for matches

33. Use specialcase pattern '*<>' to match all edges
       - distinct from '<*>' which matches all edges with one leg
       - distinct from '* ' which matches all nodes

34. incremental updates from files ...
        - parse and store a g file as one act/line,  but without any
          modification to ordering or duplication.
        - if new, then process every act
        - if updated then process only diff lines (- acts)
             - generate deletes for missing lines.
             - generate add for new lines or updates.
                   - reset any attributes missing from new - not quite!
