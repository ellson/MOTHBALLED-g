2) ENHANCEMENT nodes introduced with "=" don't require further node induction

3) ENHANCEMENT Some grammar elements are purely for syntax construction and have no representation by themselves:
	OBJECT, LEG, ENDPOINT, .... (particularly elements of lists)
these are consuming elem_t storage, and presumably extra processing.   Can they be eliminated?
MOSTLY DONE

5) ENHANCEMENT command line rework ...
	-a [<file>]         ... read archive at init.  <file> defaults to g_archive.tgz
	-A [<file>]         ... write archive on exit.  <file> defaults to g_archive.tgz
	-p [<file>]         ... print main_container on exit.  <file> defaults to "-"  (i.e. stdout)
	-P <name> [<file>]  ... print named container on exit.  <name> can be full name (i.e. subject), or namehash
        -i [<file>]         ... print index of hashname to full name. <file> defaults to "-"  (i.e. stdout)
        -d [level]          ... print debugging info to stdout
	-s                  ... print stats to stdout
NO - see notes in TODO for a configuration graph

10) FIXME processing and storage of pattern contents (can these contain further patterns?)
11) FIXME merging of pattern contents when matching

12) when to introduce an object DB ?
